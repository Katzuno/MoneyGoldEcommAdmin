{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"D:/WORK/IT HIT/TemaOnlineStore/MoneyGoldEcommAdmin/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"D:/WORK/IT HIT/TemaOnlineStore/MoneyGoldEcommAdmin/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _inherits = require(\"D:/WORK/IT HIT/TemaOnlineStore/MoneyGoldEcommAdmin/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"D:/WORK/IT HIT/TemaOnlineStore/MoneyGoldEcommAdmin/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar ErrorReportingMixinBase = require('./mixin-base');\nvar ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nvar Mixin = require('../../utils/mixin');\nvar ErrorReportingTokenizerMixin = /*#__PURE__*/function (_ErrorReportingMixinB) {\n  _inherits(ErrorReportingTokenizerMixin, _ErrorReportingMixinB);\n  var _super = _createSuper(ErrorReportingTokenizerMixin);\n  function ErrorReportingTokenizerMixin(tokenizer, opts) {\n    var _this;\n    _classCallCheck(this, ErrorReportingTokenizerMixin);\n    _this = _super.call(this, tokenizer, opts);\n    var preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n    _this.posTracker = preprocessorMixin.posTracker;\n    return _this;\n  }\n  return _createClass(ErrorReportingTokenizerMixin);\n}(ErrorReportingMixinBase);\nmodule.exports = ErrorReportingTokenizerMixin;","map":{"version":3,"names":["_createClass","require","default","_classCallCheck","_inherits","_createSuper","ErrorReportingMixinBase","ErrorReportingPreprocessorMixin","Mixin","ErrorReportingTokenizerMixin","_ErrorReportingMixinB","_super","tokenizer","opts","_this","call","preprocessorMixin","install","preprocessor","posTracker","module","exports"],"sources":["D:/WORK/IT HIT/TemaOnlineStore/MoneyGoldEcommAdmin/node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js"],"sourcesContent":["'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\n    constructor(tokenizer, opts) {\n        super(tokenizer, opts);\n\n        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n\n        this.posTracker = preprocessorMixin.posTracker;\n    }\n}\n\nmodule.exports = ErrorReportingTokenizerMixin;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,YAAA,GAAAC,OAAA,0GAAAC,OAAA;AAAA,IAAAC,eAAA,GAAAF,OAAA,6GAAAC,OAAA;AAAA,IAAAE,SAAA,GAAAH,OAAA,uGAAAC,OAAA;AAAA,IAAAG,YAAA,GAAAJ,OAAA,0GAAAC,OAAA;AAEb,IAAMI,uBAAuB,GAAGL,OAAO,CAAC,cAAc,CAAC;AACvD,IAAMM,+BAA+B,GAAGN,OAAO,CAAC,sBAAsB,CAAC;AACvE,IAAMO,KAAK,GAAGP,OAAO,CAAC,mBAAmB,CAAC;AAAC,IAErCQ,4BAA4B,0BAAAC,qBAAA;EAAAN,SAAA,CAAAK,4BAAA,EAAAC,qBAAA;EAAA,IAAAC,MAAA,GAAAN,YAAA,CAAAI,4BAAA;EAC9B,SAAAA,6BAAYG,SAAS,EAAEC,IAAI,EAAE;IAAA,IAAAC,KAAA;IAAAX,eAAA,OAAAM,4BAAA;IACzBK,KAAA,GAAAH,MAAA,CAAAI,IAAA,OAAMH,SAAS,EAAEC,IAAI;IAErB,IAAMG,iBAAiB,GAAGR,KAAK,CAACS,OAAO,CAACL,SAAS,CAACM,YAAY,EAAEX,+BAA+B,EAAEM,IAAI,CAAC;IAEtGC,KAAA,CAAKK,UAAU,GAAGH,iBAAiB,CAACG,UAAU;IAAC,OAAAL,KAAA;EACnD;EAAC,OAAAd,YAAA,CAAAS,4BAAA;AAAA,EAPsCH,uBAAuB;AAUlEc,MAAM,CAACC,OAAO,GAAGZ,4BAA4B"},"metadata":{},"sourceType":"script","externalDependencies":[]}